version: 2

aliases:
  - &sonar-scan
    name: Sonar scan
    command: |
      mvn -Psonar -s .circleci/settings.xml \
        sonar:sonar \
        -Dsonar.projectKey=entur_${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.organization=${SONAR_ORG} \
        -Dsonar.projectName=${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=${ENTUR_SONAR_PASSWORD}
  - &jfrog-login
    name: Rename jfrog environment variable for maven setting.xml
    command: |
      echo "export JFROG_USER=$ARTIFACTORY_USER"  >> $BASH_ENV
      echo "export JFROG_PASS=$ARTIFACTORY_PASSWORD"  >> $BASH_ENV
  - &install-xmlstarlet
    name: Install xmlstarlet
    command: |
      sudo rm -rf /var/lib/apt/lists/*
      sudo apt-get update
      sudo apt-get -y install xmlstarlet

jobs:
  test:
    docker:
      - image:  cimg/openjdk:19.0
    environment:
      MAVEN_OPTS: -Xmx3G
    steps:
      - checkout
      - restore_cache:
          key: dep-cache-{{ checksum "pom.xml" }}
      - run: *install-xmlstarlet
      - run:
          name: Download Maven settings
          command: wget https://raw.githubusercontent.com/entur/circleci-toolbox-image-java11/master/tools/m2/settings.xml -O .circleci/settings.xml
      - run: *jfrog-login
      - run:
          name: Refresh cache
          command: mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.0:go-offline -s .circleci/settings.xml
      - save_cache:
          paths:
            - ~/.m2
          key: dep-cache-{{ checksum "pom.xml" }}
      # Cannot use -o because of snapshot dependencies.
      - run:
          name: Run Maven verify
          command: mvn verify -s .circleci/settings.xml
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
      - persist_to_workspace:
          root: ~/project
          paths:
            - target
            - .circleci

  sonar:
    docker:
      - image:  cimg/openjdk:19.0
    environment:
      MAVEN_OPTS: -Xmx3G
    steps:
      - checkout
      - restore_cache:
          key: dep-cache-{{ checksum "pom.xml" }}
      - attach_workspace:
          at: ~/project
      - run: *jfrog-login
      - run: *sonar-scan

  build:
    docker:
      - image:  cimg/openjdk:19.0
    environment:
      MAVEN_OPTS: -Xmx3G
    steps:
    - checkout
    - restore_cache:
        key: dep-cache-{{ checksum "pom.xml" }}
    - run: *install-xmlstarlet
    - run: *jfrog-login
    - run:
        name: Download Maven settings
        command: wget https://raw.githubusercontent.com/entur/circleci-toolbox-image-java11/master/tools/m2/settings.xml -O .circleci/settings.xml
    - run:
        name: Refresh cache
        command: mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.0:go-offline -s .circleci/settings.xml
    - save_cache:
        paths:
        - ~/.m2
        key: dep-cache-{{ checksum "pom.xml" }}
    - run:
        name: Run Maven package
        command: mvn package -s .circleci/settings.xml -DskipTests

  deploy:
    docker:
      - image:  cimg/openjdk:19.0
    steps:
      - checkout
      - restore_cache:
          key: dep-cache-{{ checksum "pom.xml" }}
      - attach_workspace:
          at: ~/project
      - run: *install-xmlstarlet
      - run: *jfrog-login
      - run:
          name: Run Maven deploy
          command: mvn deploy -s .circleci/settings.xml -DskipTests

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - test:
          context: global
      - sonar:
          context: global
          requires:
            - test
      - build:
          context: global
          requires:
          - sonar
      - deploy:
          context: global
          requires:
            - build
          filters:
            branches:
              only: master
